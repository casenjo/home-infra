version: "3.5"

services:
  traefik:
    image: traefik:v2.2
    container_name: traefik
    domainname: docker
    hostname: traefik
    networks:
      - traefik
      - default
    dns:
      - 172.20.0.2
    ports:
      # The HTTP/HTTPS port
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # Maps to the file that is used in traefik/traefik.toml
      - "./traefik/dynamic.toml:/dynamic.toml"
      - "./traefik/traefik.toml:/traefik.toml"
      - "./portainer:/certs"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: unless-stopped

  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    domainname: docker
    hostname: portainer
    networks:
      - traefik
      - default
    ports:
      - target: 8000
        published: 8000
      - target: 9000
        published: 9000
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainer_data:/data portainer/portainer"
      - "./portainer:/certs"
    command: --ssl
      --sslcert /certs/portainer.docker.crt
      --sslkey /certs/portainer.docker.key
    labels:
      # Enable Traefik for this container (required when using
      # --providers.docker.exposedbydefault=false for Traefik's config)
      - "traefik.enable=true"
      # Use the special traefik network to communicate with Traefik
      - "traefik.docker.network=traefik"
      # Create a service called "portainer" and configure its port to 9000
      # since its the port used for Portainer's web UI
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.services.portainer.loadbalancer.server.scheme=https"
      # Add a router named "portainer" to the routers, which is reached when
      # host is equal to "portainer.docker"
      - "traefik.http.routers.portainer.rule=Host(`portainer.docker`)"
      ## Use the websecure entrypoint for this router
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls=true"

networks:
  traefik:
    ipam:
      config:
        - subnet: 172.10.0.0/24

  pihole:
    ipam:
      config:
        - subnet: 172.20.0.0/24

volumes:
  portainer_data:
